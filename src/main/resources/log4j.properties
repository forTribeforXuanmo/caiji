log4j.rootLogger=DEBUG,consoleAppender,logfile,logfile2


# ConsoleAppender 输出
log4j.appender.consoleAppender=org.apache.log4j.ConsoleAppender
log4j.appender.consoleAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.consoleAppender.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS}-[%c] [%p][%l] %m%n
log4j.appender.consoleAppender.Threshold=info

# 文件输出：RollingFileAppender
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#保存log文件路径
log4j.appender.logfile.File=${catalina.home}\\logs\\caiji\\log.txt
# 默认为true，添加到末尾，false在每次启动时进行覆盖
log4j.appender.logfile.Append = true
# 一个log文件的大小，超过这个大小就又会生成1个日志 # KB ，MB，GB
log4j.appender.logfile.MaxFileSize = 20MB 
log4j.appender.logfile.ImmediateFlush=false
log4j.appender.logfile.Threshold=debug
# 最多保存20个文件备份
log4j.appender.logfile.MaxBackupIndex = 20
# 输出文件的格式
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c] [%p] - %m%n

# Druid
log4j.logger.druid.sql=error
log4j.logger.druid.sql.DataSource=WARN
log4j.logger.druid.sql.Connection=WARN
log4j.logger.druid.sql.Statement=DEBUG
log4j.logger.druid.sql.ResultSet=DEBUG


##记录错误信息
log4j.appender.logfile2=org.apache.log4j.RollingFileAppender
log4j.appender.logfile2.File=${catalina.home}\\logs\\caiji\\error.txt
log4j.appender.logfile2.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile2.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS}[%t] [%c] [%p] - %m%n
log4j.appender.logfile2.Threshold=error


